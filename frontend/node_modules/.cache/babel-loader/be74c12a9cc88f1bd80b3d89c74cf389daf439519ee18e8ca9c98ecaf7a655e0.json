{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aksha\\\\OneDrive\\\\Desktop\\\\Expense_Tracker\\\\frontend\\\\src\\\\components\\\\chart\\\\chart.js\";\nimport React from 'react';\nimport Styled from 'styled-components';\nimport { Chart as ChartJs, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement, BarController } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { Use_Global_Context } from '../../context/globalContext';\nimport { dateFormat } from '../../util/dateFormat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJs.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement);\nfunction Chart(_ref) {\n  let {\n    chartType\n  } = _ref;\n  const {\n    incomes,\n    expenses\n  } = Use_Global_Context();\n\n  // Prepare data based on chart type\n  const chartDataMap = new Map();\n  let chartLabel = '';\n  let chartBackgroundColor = '';\n  if (chartType === 'income') {\n    chartLabel = 'Income';\n    chartBackgroundColor = 'green';\n    for (const income of incomes) {\n      const date = dateFormat(income.date);\n      if (chartDataMap.has(date)) {\n        chartDataMap.set(date, chartDataMap.get(date) + income.amount);\n      } else {\n        chartDataMap.set(date, income.amount);\n      }\n    }\n  } else if (chartType === 'expense') {\n    chartLabel = 'Expense';\n    chartBackgroundColor = 'red';\n    for (const expense of expenses) {\n      const date = dateFormat(expense.date);\n      if (chartDataMap.has(date)) {\n        chartDataMap.set(date, chartDataMap.get(date) + expense.amount);\n      } else {\n        chartDataMap.set(date, expense.amount);\n      }\n    }\n  }\n  const chartData = {\n    labels: Array.from(chartDataMap.keys()),\n    datasets: [{\n      label: chartLabel,\n      data: Array.from(chartDataMap.values()),\n      backgroundColor: chartBackgroundColor,\n      tension: 0.2\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"charts\",\n    children: /*#__PURE__*/_jsxDEV(StyledChart, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: {\n          plugins: {\n            title: {\n              display: true,\n              text: chartLabel\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_c = Chart;\nconst StyledChart = Styled.div`\n    background: #71C9CE;\n    border: 2px solid #FFFFFF;\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n    padding: 1rem;\n    border-radius: 20px;\n    flex: 1;\n    margin-right: 1rem;\n    height: 400px;\n    \n    &:last-child {\n        margin-right: 0;\n    }\n`;\n_c2 = StyledChart;\nexport default Chart;\nvar _c, _c2;\n$RefreshReg$(_c, \"Chart\");\n$RefreshReg$(_c2, \"StyledChart\");","map":{"version":3,"names":["React","Styled","Chart","ChartJs","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","BarController","Line","Use_Global_Context","dateFormat","jsxDEV","_jsxDEV","register","_ref","chartType","incomes","expenses","chartDataMap","Map","chartLabel","chartBackgroundColor","income","date","has","set","get","amount","expense","chartData","labels","Array","from","keys","datasets","label","data","values","backgroundColor","tension","className","children","StyledChart","options","plugins","title","display","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","div","_c2","$RefreshReg$"],"sources":["C:/Users/aksha/OneDrive/Desktop/Expense_Tracker/frontend/src/components/chart/chart.js"],"sourcesContent":["import React from 'react';\r\nimport Styled from 'styled-components';\r\nimport { Chart as ChartJs, \r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    ArcElement,\r\n    BarController,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Use_Global_Context } from '../../context/globalContext';\r\nimport { dateFormat } from '../../util/dateFormat';\r\n\r\nChartJs.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    ArcElement,\r\n);\r\n\r\nfunction Chart({ chartType }) {\r\n    const { incomes, expenses } = Use_Global_Context();\r\n\r\n    // Prepare data based on chart type\r\n    const chartDataMap = new Map();\r\n    let chartLabel = '';\r\n    let chartBackgroundColor = '';\r\n\r\n    if (chartType === 'income') {\r\n        chartLabel = 'Income';\r\n        chartBackgroundColor = 'green';\r\n\r\n        for (const income of incomes) {\r\n            const date = dateFormat(income.date);\r\n            if (chartDataMap.has(date)) {\r\n                chartDataMap.set(date, chartDataMap.get(date) + income.amount);\r\n            } else {\r\n                chartDataMap.set(date, income.amount);\r\n            }\r\n        }\r\n    } else if (chartType === 'expense') {\r\n        chartLabel = 'Expense';\r\n        chartBackgroundColor = 'red';\r\n\r\n        for (const expense of expenses) {\r\n            const date = dateFormat(expense.date);\r\n            if (chartDataMap.has(date)) {\r\n                chartDataMap.set(date, chartDataMap.get(date) + expense.amount);\r\n            } else {\r\n                chartDataMap.set(date, expense.amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    const chartData = {\r\n        labels: Array.from(chartDataMap.keys()),\r\n        datasets: [\r\n            {\r\n                label: chartLabel,\r\n                data: Array.from(chartDataMap.values()),\r\n                backgroundColor: chartBackgroundColor,\r\n                tension: 0.2,\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <div className='charts'>\r\n            <StyledChart>\r\n                <Line data={chartData} options={{ plugins: { title: { display: true, text: chartLabel } } }} />\r\n            </StyledChart>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst StyledChart = Styled.div`\r\n    background: #71C9CE;\r\n    border: 2px solid #FFFFFF;\r\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n    padding: 1rem;\r\n    border-radius: 20px;\r\n    flex: 1;\r\n    margin-right: 1rem;\r\n    height: 400px;\r\n    \r\n    &:last-child {\r\n        margin-right: 0;\r\n    }\r\n`;\r\n\r\nexport default Chart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}