{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aksha\\\\OneDrive\\\\Desktop\\\\Expense_Tracker\\\\frontend\\\\src\\\\components\\\\Top_transactions\\\\TopTransactions.js\";\nimport React from 'react';\nimport Styled from 'styled-components';\nimport { Use_Global_Context } from '../../context/globalContext';\nimport { dateFormat } from '../../util/dateFormat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TopTransactions(_ref) {\n  let {\n    type\n  } = _ref;\n  const {\n    incomes,\n    expenses\n  } = Use_Global_Context();\n\n  // Sort incomes and expenses based on amount\n  const sortedIncomes = incomes.sort((a, b) => b.amount - a.amount);\n  const sortedExpenses = expenses.sort((a, b) => b.amount - a.amount);\n\n  // Get the top three incomes or expenses based on the provided type\n  let topTransactions;\n  if (type === 'income') {\n    topTransactions = sortedIncomes.slice(0, 3);\n  } else if (type === 'expense') {\n    topTransactions = sortedExpenses.slice(0, 3);\n  }\n  return /*#__PURE__*/_jsxDEV(TopTransactions_Styled, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Top \", type === 'income' ? 'Incomes' : 'Expenses']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), topTransactions && topTransactions.length > 0 ? topTransactions.map(transaction => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"transaction-info\",\n        children: [\"Title: \", transaction.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"transaction-info\",\n        children: [\"Amount: \", transaction.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"transaction-info\",\n        children: [\"Date: \", dateFormat(transaction.date)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this)]\n    }, transaction.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No \", type === 'income' ? 'incomes' : 'expenses', \" found.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_c = TopTransactions;\nconst TopTransactions_Styled = Styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n\n    .transaction-item {\n        background: #64CCC5;\n        border: 2px solid #ffffff;\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n        padding: 1rem;\n        border-radius: 20px;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n\n        .transaction-info {\n            color: white;\n        }\n    }\n`;\n_c2 = TopTransactions_Styled;\nexport default TopTransactions;\nvar _c, _c2;\n$RefreshReg$(_c, \"TopTransactions\");\n$RefreshReg$(_c2, \"TopTransactions_Styled\");","map":{"version":3,"names":["React","Styled","Use_Global_Context","dateFormat","jsxDEV","_jsxDEV","TopTransactions","_ref","type","incomes","expenses","sortedIncomes","sort","a","b","amount","sortedExpenses","topTransactions","slice","TopTransactions_Styled","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","transaction","className","title","date","id","_c","div","_c2","$RefreshReg$"],"sources":["C:/Users/aksha/OneDrive/Desktop/Expense_Tracker/frontend/src/components/Top_transactions/TopTransactions.js"],"sourcesContent":["import React from 'react';\r\nimport Styled from 'styled-components';\r\nimport { Use_Global_Context } from '../../context/globalContext';\r\nimport { dateFormat } from '../../util/dateFormat';\r\n\r\nfunction TopTransactions({ type }) {\r\n    const { incomes, expenses } = Use_Global_Context();\r\n\r\n    // Sort incomes and expenses based on amount\r\n    const sortedIncomes = incomes.sort((a, b) => b.amount - a.amount);\r\n    const sortedExpenses = expenses.sort((a, b) => b.amount - a.amount);\r\n\r\n    // Get the top three incomes or expenses based on the provided type\r\n    let topTransactions;\r\n    if (type === 'income') {\r\n        topTransactions = sortedIncomes.slice(0, 3);\r\n    } else if (type === 'expense') {\r\n        topTransactions = sortedExpenses.slice(0, 3);\r\n    }\r\n\r\n    return (\r\n        <TopTransactions_Styled>\r\n            <h2>Top {type === 'income' ? 'Incomes' : 'Expenses'}</h2>\r\n            {topTransactions && topTransactions.length > 0 ? (\r\n                topTransactions.map((transaction) => (\r\n                    <div className=\"transaction-item\" key={transaction.id}>\r\n                        <p className=\"transaction-info\">Title: {transaction.title}</p>\r\n                        <p className=\"transaction-info\">Amount: {transaction.amount}</p>\r\n                        <p className=\"transaction-info\">Date: {dateFormat(transaction.date)}</p>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>No {type === 'income' ? 'incomes' : 'expenses'} found.</p>\r\n            )}\r\n        </TopTransactions_Styled>\r\n    );\r\n}\r\n\r\nconst TopTransactions_Styled = Styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n\r\n    .transaction-item {\r\n        background: #64CCC5;\r\n        border: 2px solid #ffffff;\r\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n        padding: 1rem;\r\n        border-radius: 20px;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n\r\n        .transaction-info {\r\n            color: white;\r\n        }\r\n    }\r\n`;\r\n\r\nexport default TopTransactions;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}